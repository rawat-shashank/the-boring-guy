{"pageProps":{"source":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,t,a)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,i=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&p(e,a,t[a]);if(r)for(var a of r(t))s.call(t,a)&&p(e,a,t[a]);return e},l=(e,t)=>d(e,u(t));var c=(e,t)=>{var a={};for(var n in e)o.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&r)for(var n of r(e))t.indexOf(n)<0&&s.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,l(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"URL - \"),\" \",mdx(\"a\",i({parentName:\"p\"},{href:\"//leetcode.com/problems/contains-duplicate/\"}),\"Contains Duplicate\")),mdx(\"h3\",null,\"Problem Statement\"),mdx(\"p\",null,\"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.\"),mdx(\"h3\",null,\"Concept\"),mdx(\"p\",null,\"This question asks to figure out if the array contains a duplicate element. We need to make sure if all elements are distinct or not.\"),mdx(\"p\",null,\"To make sure all elements are distinct, we will need to iterate them once, and while iterating we will save each element in a dictionary. Since key search is O(1) in dictionary, it will make our algorithm to find if any element is duplicated or not\"),mdx(\"p\",null,\"Iteration\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-python\"}),`    for x in nums\n`)),mdx(\"p\",null,\"Search\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-python\"}),`    if x in data\n`)),mdx(\"p\",null,\"If the data is not there in the dictionary, we can add the element into the dictionary. And if the iteration is over without any match, then we have a unique or distinct array.\"),mdx(\"h3\",null,\"Complexity\"),mdx(\"p\",null,\"Time : \",mdx(\"strong\",{parentName:\"p\"},\"O(n)\"),\" - As mentioned earlier we will iterate is once in the worst case, which is array is unique or distinct.\"),mdx(\"p\",null,\"Space: \",mdx(\"strong\",{parentName:\"p\"},\"O(n)\"),\" - In the worst case we will be storying all the elements as key.\"),mdx(\"h3\",null,\"Code\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-python\"}),`\ndef containsDuplicate(self, nums) -> bool:\n    data = {}\n    for x in nums:\n        if x in data:\n            return True\n        else:\n            data[x] = x\n    return False\n\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Leetcode 217 - Contains Duplicate","date":"2021-06-07","author":"Shashank Rawat","summary":"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."}},"frontMatter":{"title":"Leetcode 217 - Contains Duplicate","date":"2021-06-07","author":"Shashank Rawat","summary":"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct."}},"__N_SSG":true}