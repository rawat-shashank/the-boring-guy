{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"What's Storybook ? Should you care ?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Official statement from there website.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Storybook is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But what does it mean for us. We use storybook to create components in isolation meaning, we don't need any dependency while working on UI components.\\nWhile working on UI, most of the time we observe, we might have to be logged in, or fetch some data, load a page where the component is required, or navigate to multi level component, and other similar scenario. These things add unnecessary delay and complexity in component development. While with storybook we can develop the component beforehand and then can be included where it is required. We will see this in action in future updates.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Storybook helps you \", _jsx(_components.strong, {\n          children: \"document\"\n        }), \" components for reuse and automatically \", _jsx(_components.strong, {\n          children: \"visually test\"\n        }), \" your components to prevent bugs. Extend Storybook with an ecosystem of \", _jsx(_components.strong, {\n          children: \"addons\"\n        }), \" that help you do things like fine-tune responsive layouts or verify accessibility.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Installation\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Installing Storybook is one of the easiest thing to do. If you have followed from the previous blog post. You'll have a bare bones nextjs project setup. If not you can start with below command.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"    npx create-next-app <project-name>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"and once we have the project setup. We need to run below command to setup storybook.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"    npx sb init\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This will take care of auto installation and as well as setup of scripts to run storybook in \", _jsx(_components.strong, {\n        children: \"package.json\"\n      }), \" file.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"    \\\"storybook\\\": \\\"start-storybook -p 6006\\\", \\\"build-storybook\\\":\\n    \\\"build-storybook\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"to check if it is installed, just run\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"    npm run storybook\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It will start storybook and will open a new tab in browser with storybook on below URL.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"> http://localhost:6006/\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You'll see, storybook comes with some default component and stories. One of them is \", _jsx(_components.strong, {\n        children: \"Button\"\n      }), \". The corresponding code can be found in your project under a newly added directory/folder \", _jsx(_components.strong, {\n        children: \"stories\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What's Next\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We will bring our own stories to the mix. We will change file structure for Nextjs a little bit, and then will introduce new stories and how to use them to build fast and reliable UI. Stay tuned for more.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Next.js :  Adding Storybook","date":"2021-07-13","author":"Shashank Rawat","summary":"Storybook is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application."}},"frontMatter":{"title":"Next.js :  Adding Storybook","date":"2021-07-13","author":"Shashank Rawat","summary":"Storybook is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application."},"prev":{"slug":"nextjs/intro-to-nextjs","title":"Intro to Next.js","date":"6 July 2021","author":"Shashank Rawat","summary":"Next.js is an open-source React front-end development web framework created by Vercel that enables functionality such as server-side rendering and generating static websites for React based web applications."},"next":null},"__N_SSG":true}